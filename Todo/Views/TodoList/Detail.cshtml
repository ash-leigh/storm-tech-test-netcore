@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Models.TodoItems
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

@{
    Func<TodoItemSummaryViewmodel, Microsoft.AspNetCore.Html.IHtmlContent> ListItem = 	
	          
    @<div class="row">
        <div class="col-md-8">
            <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">
                @if (item.IsDone)
                {
                    <s>@item.Title</s>
                }
                else
                {
                    <text>@item.Title</text>
                }
            </a>
        </div>
        <div class="col-md-4 text-right">
            <small>
                @item.ResponsibleParty.UserName
                <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>
            </small>
        </div>
    </div>;
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
        </li>

		@foreach (var item in Model.Items)
        {
			if(item.Importance == Importance.Low)
			{
				<li class="list-group-item list-group-item-info">  
					@ListItem(item)
				</li>
			}
        }

		@foreach (var item in Model.Items)
        {
			if(item.Importance == Importance.Medium)
			{
				<li class="list-group-item">  
					@ListItem(item)
				</li>
			}
        }

        @foreach (var item in Model.Items)
        {
			if(item.Importance == Importance.High)
			{
				<li class="list-group-item list-group-item-danger">  
					@ListItem(item)
				</li>
			}
        }

    </ul>
</div>